{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/components/app/app.component.html","./src/app/app.module.ts","./src/app/components/app/app.component.scss","./src/app/components/app/app.component.ts","./src/app/services/index/index.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;ACZA,yJAAyJ,SAAS,4IAA4I,eAAe,ia;;;;;;;;;;;;;;;;;;;;ACAvQ;AACf;AACiB;AACI;AAa5D,IAAa,SAAS,GAAtB,MAAa,SAAS;CACrB;AADY,SAAS;IAXrB,8DAAQ,CAAC;QACR,YAAY,EAAE;YACZ,0EAAY;SACb;QACD,OAAO,EAAE;YACP,uEAAa;YACb,qEAAgB;SACjB;QACD,SAAS,EAAE,EAAE;QACb,SAAS,EAAE,CAAC,0EAAY,CAAC;KAC1B,CAAC;GACW,SAAS,CACrB;AADqB;;;;;;;;;;;;AChBtB,+DAA+D,mJ;;;;;;;;;;;;;;;;;;;;ACAvB;AACH;AACF;AAE6B;AAOhE,IAAa,YAAY,GAAzB,MAAa,YAAY;IAIvB,YAAoB,YAA0B;QAA1B,iBAAY,GAAZ,YAAY,CAAc;QAHrC,UAAK,GAAW,SAAS,CAAC;QACnC,YAAO,GAAG,IAAI,oDAAe,CAAS,EAAE,CAAC,CAAC;QAGxC,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE;aACzB,IAAI,CACH,0DAAG,CAAC,CAAC,OAAgB,EAAE,EAAE,CAAC,GAAG,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,IAAI,EAAE,CAAC,CAC9D;aACA,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC7B,CAAC;CACF;;YAPmC,0EAAY;;AAJnC,YAAY;IALxB,+DAAS,CAAC;QACT,QAAQ,EAAE,UAAU;QACpB,sJAAmC;;KAEpC,CAAC;2EAKkC,0EAAY;GAJnC,YAAY,CAWxB;AAXwB;;;;;;;;;;;;;;;;;;;;;ACXuB;AACP;AACL;AACM;AAM1C,IAAa,YAAY,GAAzB,MAAa,YAAY;IAIvB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAFnB,aAAQ,GAAW,iCAAiC,CAAC;IAGtE,CAAC;IAED,QAAQ;QAEN,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAU,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAC/C,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAU,UAAU,CAAC,CAAC,CAClD,CAAC;IACJ,CAAC;IAEO,WAAW,CAAI,OAAe,EAAE,MAAU;QAEhD,OAAO,CAAC,KAAY,EAAiB,EAAE;YACrC,OAAO,+CAAE,CAAC,MAAW,CAAC,CAAC;QACzB,CAAC,CAAC;IACJ,CAAC;CACF;;YAhB2B,+DAAU;;AAJzB,YAAY;IAHxB,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;2EAK0B,+DAAU;GAJzB,YAAY,CAoBxB;AApBwB;;;;;;;;;;;;;ACTzB;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAIzD,MAAM,WAAW,GAAiB;IACvC,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACjBnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\r\\n<div style=\\\"text-align:center\\\">\\r\\n  <h1>\\r\\n    Welcome to {{ title }}!\\r\\n  </h1>\\r\\n</div>\\r\\n<h2>Here are some links to help you start: </h2>\\r\\n<ul>\\r\\n  <li>\\r\\n    <h2>Message from the localhost:3000 : {{message|async}} </h2>\\r\\n  </li>\\r\\n  <li>\\r\\n    <h2><a target=\\\"_blank\\\" rel=\\\"noopener\\\" href=\\\"https://angular.io/tutorial\\\">Tour of Heroes</a></h2>\\r\\n  </li>\\r\\n  <li>\\r\\n    <h2><a target=\\\"_blank\\\" rel=\\\"noopener\\\" href=\\\"https://angular.io/cli\\\">CLI Documentation</a></h2>\\r\\n  </li>\\r\\n  <li>\\r\\n    <h2><a target=\\\"_blank\\\" rel=\\\"noopener\\\" href=\\\"https://blog.angular.io/\\\">Angular blog</a></h2>\\r\\n  </li>\\r\\n</ul>\\r\\n\"","import {HttpClientModule} from '@angular/common/http';\r\nimport {NgModule} from '@angular/core';\r\nimport {BrowserModule} from '@angular/platform-browser';\r\nimport {AppComponent} from './components/app/app.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component} from '@angular/core';\r\nimport {BehaviorSubject} from 'rxjs';\r\nimport {map} from 'rxjs/operators';\r\nimport {Message} from '../../../../../common/communication/message';\r\nimport {IndexService} from '../../services/index/index.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n})\r\nexport class AppComponent {\r\n  readonly title: string = 'LOG2990';\r\n  message = new BehaviorSubject<string>('');\r\n\r\n  constructor(private basicService: IndexService) {\r\n    this.basicService.basicGet()\r\n      .pipe(\r\n        map((message: Message) => `${message.title} ${message.body}`),\r\n      )\r\n      .subscribe(this.message);\r\n  }\r\n}\r\n","import {HttpClient} from '@angular/common/http';\r\nimport {Injectable} from '@angular/core';\r\nimport {Observable, of} from 'rxjs';\r\nimport {catchError} from 'rxjs/operators';\r\nimport {Message} from '../../../../../common/communication/message';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class IndexService {\r\n\r\n  private readonly BASE_URL: string = 'http://localhost:3000/api/index';\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  basicGet(): Observable<Message> {\r\n\r\n    return this.http.get<Message>(this.BASE_URL).pipe(\r\n      catchError(this.handleError<Message>('basicGet')),\r\n    );\r\n  }\r\n\r\n  private handleError<T>(request: string, result?: T): (error: Error) => Observable<T> {\r\n\r\n    return (error: Error): Observable<T> => {\r\n      return of(result as T);\r\n    };\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nimport {IEnvironment} from './IEnvironment';\r\n\r\nexport const environment: IEnvironment = {\r\n  production: false,\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch((err) => console.error(err));\r\n"],"sourceRoot":""}